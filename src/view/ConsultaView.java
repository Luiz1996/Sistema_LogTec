/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import conexao.Conexao;
import controller.ExcelController;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;
import model.Consulta;
import model.ConsultaTableModel;

/**
 *
 * @author luiz.pereira
 */
public class ConsultaView extends javax.swing.JFrame {
    ConsultaTableModel tableModel = new ConsultaTableModel();
    ExcelController excC;
    List<String> dataBases = new ArrayList<>();
    
    
    /**
     * Creates new form ConsultaView
     */
    public ConsultaView() { 
        initComponents();
        setTitle("Sistema LogTec - Consulta de Logs");   
        setIcon();
        txtConsulta.requestFocus();
        tblResultado.setModel(tableModel);
        tblResultado.setRowSorter(new TableRowSorter(tblResultado.getModel()));
        
        //Old Base
        dataBases.add("DATABASE_1");
        
        //New Base
        dataBases.add("DATABASE_2");
        
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRadGroup = new javax.swing.ButtonGroup();
        jTbPaneConsulta = new javax.swing.JTabbedPane();
        pnlConsulta = new javax.swing.JPanel();
        btnRadOld = new javax.swing.JRadioButton();
        btnRadNew = new javax.swing.JRadioButton();
        btnRadAll = new javax.swing.JRadioButton();
        separador1 = new javax.swing.JSeparator();
        btnConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsulta = new javax.swing.JTextArea();
        jTbPaneResultado = new javax.swing.JPanel();
        pnlResultado = new javax.swing.JPanel();
        btnExportar = new javax.swing.JButton();
        btnEnviarEmail = new javax.swing.JButton();
        separador2 = new javax.swing.JSeparator();
        lblResultado = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRadGroup.add(btnRadOld);
        btnRadOld.setText("Old Base");

        btnRadGroup.add(btnRadNew);
        btnRadNew.setText("New Base");

        btnRadGroup.add(btnRadAll);
        btnRadAll.setSelected(true);
        btnRadAll.setText("All Bases");

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        txtConsulta.setColumns(20);
        txtConsulta.setRows(5);
        txtConsulta.setText("select distinct\n    l.pk1,\n    l.pk2,\n    l.pk3,\n    l.pk4,\n    l.table_name,\n    l.operation,\n    l.transactionid,\n    l.dml,\n    l.user_name,\n    l.client_address,                               \n    l.systime,\n    d.column_name,\n    d.old_value,\n    d.new_value\nfrom\n    fz_log_operations l\nleft join\n    fz_log_data       d on d.idlogoper = l.idlogoper\nwhere\n    l.pk1 in () AND\n    l.pk2 in () AND\n    --l.pk3 in () AND\n    --l.pk4 in () AND\n    l.table_name = 'NOME_TABELA' and\n    --(d.column_name = 'CODMARCA' and (d.old_value = '?' or d.new_value = '?')) and\n    l.systime between '2017-09-01 00:00:00' and current_timestamp\norder by\n    11,1,2,3,4;");
        jScrollPane1.setViewportView(txtConsulta);

        javax.swing.GroupLayout pnlConsultaLayout = new javax.swing.GroupLayout(pnlConsulta);
        pnlConsulta.setLayout(pnlConsultaLayout);
        pnlConsultaLayout.setHorizontalGroup(
            pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(separador1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlConsultaLayout.createSequentialGroup()
                        .addComponent(btnRadOld)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRadNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRadAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 701, Short.MAX_VALUE)
                        .addComponent(btnConsultar)))
                .addContainerGap())
        );
        pnlConsultaLayout.setVerticalGroup(
            pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRadOld)
                    .addComponent(btnRadNew)
                    .addComponent(btnRadAll)
                    .addComponent(btnConsultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separador1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTbPaneConsulta.addTab("Consulta", pnlConsulta);

        btnExportar.setText("Exportar (*.xlsx)");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        btnEnviarEmail.setText("Enviar no e-mail");
        btnEnviarEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarEmailActionPerformed(evt);
            }
        });

        lblResultado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblResultado.setText("Resultado da Consulta");

        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "A", "B", "C", "D"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblResultado);
        if (tblResultado.getColumnModel().getColumnCount() > 0) {
            tblResultado.getColumnModel().getColumn(0).setResizable(false);
            tblResultado.getColumnModel().getColumn(1).setResizable(false);
            tblResultado.getColumnModel().getColumn(2).setResizable(false);
            tblResultado.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout pnlResultadoLayout = new javax.swing.GroupLayout(pnlResultado);
        pnlResultado.setLayout(pnlResultadoLayout);
        pnlResultadoLayout.setHorizontalGroup(
            pnlResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(separador2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlResultadoLayout.createSequentialGroup()
                        .addComponent(lblResultado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 602, Short.MAX_VALUE)
                        .addComponent(btnExportar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviarEmail)))
                .addContainerGap())
        );
        pnlResultadoLayout.setVerticalGroup(
            pnlResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportar)
                    .addComponent(btnEnviarEmail)
                    .addComponent(lblResultado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jTbPaneResultadoLayout = new javax.swing.GroupLayout(jTbPaneResultado);
        jTbPaneResultado.setLayout(jTbPaneResultadoLayout);
        jTbPaneResultadoLayout.setHorizontalGroup(
            jTbPaneResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jTbPaneResultadoLayout.setVerticalGroup(
            jTbPaneResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTbPaneConsulta.addTab("Resultado", jTbPaneResultado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTbPaneConsulta)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTbPaneConsulta)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //método que realiza a consulta no BD
    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        boolean fail = false;
        Cursor cursor = Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR);
        this.setCursor(cursor);
        Consulta cons = new Consulta();
        ResultSet rs = null;
        tableModel.removeRow(0);
        tblResultado.setRowSorter(new TableRowSorter(tblResultado.getModel()));

        if (btnRadOld.isSelected()) {
            try {
                //CONSULTANDO NA BASE ANTIGA
                Conexao bdOld = new Conexao(dataBases.get(0));
                try (Statement stOld = bdOld.con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)) {
                    stOld.execute((txtConsulta.getText()).trim());
                    rs = stOld.getResultSet();

                    while (rs.next()) {
                        Consulta cons_temp = new Consulta(
                                (rs.getInt("pk1")),
                                (rs.getInt("pk2")),
                                (rs.getInt("pk3")),
                                (rs.getInt("pk4")),
                                (rs.getString("table_name")),
                                (rs.getString("operation")),
                                (rs.getInt("transactionid")),
                                (rs.getString("dml")),
                                (rs.getString("user_name")),
                                (rs.getString("client_address")),
                                (rs.getString("systime")),
                                (rs.getString("column_name")),
                                (rs.getString("old_value")),
                                (rs.getString("new_value"))
                        );
                        tableModel.addRow(cons_temp);
                    }

                    //FECHANDO CONEXÕES
                    bdOld.con.close();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro: SQL com erro.\n".concat(ex.getMessage()), "Falha na consulta", JOptionPane.ERROR_MESSAGE);
                fail = true;
            }
        } else {
            if (btnRadNew.isSelected()) {
                try {
                    //CONSULTANDO NA BASE NOVA
                    Conexao bdNew = new Conexao(dataBases.get(1));
                    try (Statement stNew = bdNew.con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)) {
                        stNew.execute((txtConsulta.getText()).trim());
                        rs = stNew.getResultSet();

                        while (rs.next()) {
                            Consulta cons_temp = new Consulta(
                                    (rs.getInt("pk1")),
                                    (rs.getInt("pk2")),
                                    (rs.getInt("pk3")),
                                    (rs.getInt("pk4")),
                                    (rs.getString("table_name")),
                                    (rs.getString("operation")),
                                    (rs.getInt("transactionid")),
                                    (rs.getString("dml")),
                                    (rs.getString("user_name")),
                                    (rs.getString("client_address")),
                                    (rs.getString("systime")),
                                    (rs.getString("column_name")),
                                    (rs.getString("old_value")),
                                    (rs.getString("new_value"))
                            );
                            tableModel.addRow(cons_temp);
                        }

                        //FECHANDO CONEXÕES
                        bdNew.con.close();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro: SQL com erro.\n".concat(ex.getMessage()), "Falha na consulta", JOptionPane.ERROR_MESSAGE);
                    fail = true;
                }
            } else {
                try {
                    //CONSULTANDO NA BASE ANTIGA
                    Conexao bdOld = new Conexao(dataBases.get(0));
                    try (Statement stOld = bdOld.con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)) {
                        stOld.execute((txtConsulta.getText()).trim());
                        rs = stOld.getResultSet();

                        while (rs.next()) {
                            Consulta cons_temp = new Consulta(
                                    (rs.getInt("pk1")),
                                    (rs.getInt("pk2")),
                                    (rs.getInt("pk3")),
                                    (rs.getInt("pk4")),
                                    (rs.getString("table_name")),
                                    (rs.getString("operation")),
                                    (rs.getInt("transactionid")),
                                    (rs.getString("dml")),
                                    (rs.getString("user_name")),
                                    (rs.getString("client_address")),
                                    (rs.getString("systime")),
                                    (rs.getString("column_name")),
                                    (rs.getString("old_value")),
                                    (rs.getString("new_value"))
                            );
                            tableModel.addRow(cons_temp);
                        }

                        //FECHANDO CONEXÕES
                        bdOld.con.close();
                    }

                    //CONSULTANDO NA BASE NOVA
                    Conexao bdNew = new Conexao(dataBases.get(1));
                    try (Statement stNew = bdNew.con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE)) {
                        stNew.execute((txtConsulta.getText()).trim());
                        rs = stNew.getResultSet();

                        while (rs.next()) {
                            Consulta cons_temp = new Consulta(
                                    (rs.getInt("pk1")),
                                    (rs.getInt("pk2")),
                                    (rs.getInt("pk3")),
                                    (rs.getInt("pk4")),
                                    (rs.getString("table_name")),
                                    (rs.getString("operation")),
                                    (rs.getInt("transactionid")),
                                    (rs.getString("dml")),
                                    (rs.getString("user_name")),
                                    (rs.getString("client_address")),
                                    (rs.getString("systime")),
                                    (rs.getString("column_name")),
                                    (rs.getString("old_value")),
                                    (rs.getString("new_value"))
                            );
                            tableModel.addRow(cons_temp);
                        }

                        //FECHANDO CONEXÕES
                        bdNew.con.close();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro: SQL com erro.\n".concat(ex.getMessage()), "Falha na consulta", JOptionPane.ERROR_MESSAGE);
                    fail = true;
                }
            }
        }
        
        if(!fail){
            if(tableModel.getRowCount() == 0 ){ 
                jTbPaneConsulta.setSelectedIndex(0);
                JOptionPane.showMessageDialog(null, "Nenhum registro encontrado para os filtros aplicados.", "Resultado da busca", JOptionPane.INFORMATION_MESSAGE);
            }else{
                jTbPaneConsulta.setSelectedIndex(1);
            }
        }
        cursor = Cursor.getDefaultCursor();
        this.setCursor(cursor);
        System.gc();
    }//GEN-LAST:event_btnConsultarActionPerformed

    //método para ralizar exportação de arquivo
    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        Cursor cursor = Cursor.getPredefinedCursor( Cursor.WAIT_CURSOR );
        jTbPaneConsulta.setCursor(cursor);
        
        File arq = new File("c:\\Arquivo de Log - LogTec.xlsx");
        excC = new ExcelController();
        excC.exportarExcel(true, tblResultado, arq);
        
        cursor = Cursor.getDefaultCursor();
        jTbPaneConsulta.setCursor(cursor);
        System.gc();
    }//GEN-LAST:event_btnExportarActionPerformed

    //método para enviar e-mail
    private void btnEnviarEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarEmailActionPerformed
        excC = new ExcelController();
        EnvioEmailView envEmailV = new EnvioEmailView(this.tblResultado, excC);
        System.gc();
    }//GEN-LAST:event_btnEnviarEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ConsultaView().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEnviarEmail;
    private javax.swing.JButton btnExportar;
    private javax.swing.JRadioButton btnRadAll;
    private javax.swing.ButtonGroup btnRadGroup;
    private javax.swing.JRadioButton btnRadNew;
    private javax.swing.JRadioButton btnRadOld;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTbPaneConsulta;
    private javax.swing.JPanel jTbPaneResultado;
    private javax.swing.JLabel lblResultado;
    private javax.swing.JPanel pnlConsulta;
    private javax.swing.JPanel pnlResultado;
    private javax.swing.JSeparator separador1;
    private javax.swing.JSeparator separador2;
    public javax.swing.JTable tblResultado;
    private javax.swing.JTextArea txtConsulta;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icone.png")));
    }
}
